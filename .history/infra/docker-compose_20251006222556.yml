version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: bm_postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-sql:/docker-entrypoint-initdb.d   # optional: başlangıç sql scriptleri
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - bm-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: bm_pgadmin
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - bm-network

  mongo:
    image: mongo:6
    container_name: bm_mongo
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodata:/data/db
      - ./init-mongo:/docker-entrypoint-initdb.d # optional init scripts
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - bm-network

  mongo-express:
    image: mongo-express
    container_name: bm_mongo_express
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    depends_on:
      - mongo
    networks:
      - bm-network

  # İLERİDE: Uygulama servislerini de bu network'e dahil edeceğiz
  # örneğin AccountService, TransactionService, IdentityService
  # bunlar için aşağıdaki örnek yapı hazırlanmıştır

  # account-service:
  #   build: ../services/AccountService
  #   container_name: bm_account_service
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "5001:8080"
  #   networks:
  #     - bm-network

  # transaction-service:
  #   build: ../services/TransactionService
  #   container_name: bm_transaction_service
  #   depends_on:
  #     - mongo
  #   ports:
  #     - "5003:8080"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - MongoDbSettings__ConnectionString=mongodb://bm_mongo:27017
  #     - MongoDbSettings__DatabaseName=BankingDb
  #     - MongoDbSettings__CollectionName=TransactionLogs
  #   networks:
  #     - bm-network

volumes:
  pgdata:
  pgadmin_data:
  mongodata:

networks:
  bm-network:
    driver: bridge